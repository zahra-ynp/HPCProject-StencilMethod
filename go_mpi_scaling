#!/bin/bash
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=7
#SBATCH --cpus-per-task=16
#SBATCH --mem=0
#SBATCH --partition=dcgp_usr_prod
#SBATCH --account=uTS25_Tornator_0
#SBATCH --time=00:10:00
#SBATCH --job-name=mpi_strong_scaling
#SBATCH --output=mpi_scaling_results/log_%j.out
#SBATCH --error=mpi_scaling_results/err_%j.err

# === Setup ===
module load gcc/12.2.0
module load openmpi/4.1.6--gcc--12.2.0
EXEC="stencil_hybrid"
ARGS="-x 1000 -y 1000 -n 1000"

export OMP_NUM_THREADS=${SLURM_CPUS_PER_TASK}
export OMP_PLACES=cores
export OMP_PROC_BIND=spread

echo "Starting MPI+OpenMP strong scaling tests..."

OUT_FILE="mpi_scaling_results/out_nodes_${SLURM_JOB_NUM_NODES}.txt"

echo "Running with ${SLURM_JOB_NUM_NODES} nodes (${SLURM_NTASKS_PER_NODE} MPI tasks, ${SLURM_CPUS_PER_TASK} threads/task)..."

srun --nodes=${SLURM_JOB_NUM_NODES} --ntasks-per-node=${SLURM_NTASKS_PER_NODE} --cpus-per-task=${SLURM_CPUS_PER_TASK} \
    ./${EXEC} ${ARGS} > "${OUT_FILE}"

comm=$(grep "Time spent in communication" "$OUT_FILE" | awk '{print $5}')
min=$(grep "Min thread computation time" "$OUT_FILE" | awk '{print $5}')
max=$(grep "Max thread computation time" "$OUT_FILE" | awk '{print $5}')
avg=$(grep "Avg thread computation time" "$OUT_FILE" | awk '{print $5}')
echo "${SLURM_JOB_NUM_NODES},${SLURM_NTASKS_PER_NODE},${SLURM_CPUS_PER_TASK},$comm,$min,$max,$avg" >> mpi_scaling_results/mpi_times.csv

echo "All runs completed."
